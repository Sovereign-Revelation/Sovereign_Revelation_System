{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://sovereign-revelation.org/schema/advertising/advertising.schema.json",
  "title": "Advertising Workflow",
  "description": "Workflow for managing opt-in ads and revenue sharing in SRP.",
  "type": "object",
  "required": ["function", "schema", "steps", "metadata", "orchestration", "security"],
  "properties": {
    "function": {
      "type": "string",
      "const": "manageAds",
      "description": "Workflow for ad creation and revenue distribution."
    },
    "metadata": {
      "type": "object",
      "properties": {
        "schema_version": { "type": "string", "const": "5.3.1" },
        "version": { "type": "string", "const": "1.0.0" },
        "author": { "type": "string", "const": "Cipher" },
        "description": { "type": "string", "const": "Manages conscious ads and revenue sharing based on Pulse Scores." },
        "created": { "type": "string", "format": "date-time", "examples": ["2025-05-25T01:17:00Z"] },
        "updated": { "type": "string", "format": "date-time", "examples": ["2025-05-25T01:17:00Z"] },
        "tags": { "type": "array", "items": { "type": "string" }, "examples": [["ads", "revenue", "sovereignty"]] },
        "visualization": { "type": "string", "examples": ["graph TD\nA[Start] --> B[Validate Ad]\nB --> C[Distribute Revenue]\nC --> D[Update Pulse]"] },
        "examples": { "type": "array", "items": { "type": "string", "format": "uri" }, "examples": [["https://github.com/srp-exodus/ad-examples"]] },
        "docs": { "type": "string", "format": "uri", "const": "https://sovereign-revelation.org/docs/advertising" },
        "tooling": { "type": "array", "items": { "type": "string" }, "examples": [["vscode", "jsonflow-cli", "react-devtools"]] },
        "compliance": { "type": "array", "items": { "type": "string" }, "examples": [["GDPR", "CCPA"]] },
        "license": { "type": "string", "const": "MIT" },
        "standards": { "type": "array", "items": { "type": "string" }, "examples": [["OpenAPI"]] }
      },
      "required": ["schema_version", "version", "author", "description", "examples", "docs", "license"]
    },
    "schema": {
      "type": "object",
      "properties": {
        "inputs": {
          "type": "object",
          "properties": {
            "creatorSID": {
              "type": "string",
              "description": "Soulbound Identity of the ad creator.",
              "constraints": { "pattern": "^0x[a-fA-F0-9]{40}$" }
            },
            "adContent": {
              "type": "object",
              "description": "Ad content details.",
              "properties": {
                "title": { "type": "string", "maxLength": 100 },
                "description": { "type": "string", "maxLength": 1000 },
                "mediaUrl": { "type": "string", "format": "uri" }
              },
              "required": ["title", "description", "mediaUrl"]
            },
            "revenuePool": {
              "type": "object",
              "description": "Revenue pool for distribution.",
              "properties": {
                "total": { "type": "string", "pattern": "^\\d+\\.\\d{1,18}$" },
                "assetType": { "type": "string", "enum": ["ETH", "ERC20", "DOT", "ATOM"] },
                "contractAddress": { "type": "string", "pattern": "^0x[a-fA-F0-9]{40}$" }
              },
              "required": ["total", "assetType", "contractAddress"]
            }
          },
          "required": ["creatorSID", "adContent", "revenuePool"]
        },
        "outputs": {
          "type": "object",
          "properties": {
            "adId": {
              "type": "string",
              "description": "Unique ad ID.",
              "destination": "database",
              "constraints": { "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$" }
            },
            "distribution": {
              "type": "array",
              "description": "Revenue distribution to users.",
              "items": {
                "type": "object",
                "properties": {
                  "sid": { "type": "string", "pattern": "^0x[a-fA-F0-9]{40}$" },
                  "amount": { "type": "string", "pattern": "^\\d+\\.\\d{1,18}$" }
                }
              },
              "destination": "blockchain"
            }
          },
          "required": ["adId", "distribution"]
        }
      },
      "required": ["inputs", "outputs"]
    },
    "steps": {
      "type": "array",
      "items": [
        {
          "id": "validateAd",
          "type": "control",
          "action": "validate",
          "language": "javascript",
          "code": "if (!input.adContent.title) throw new Error('Missing ad title');",
          "input": "schema.inputs.adContent",
          "on_error": { "action": "fail", "error_code": "INVALID_AD" }
        },
        {
          "id": "storeAd",
          "type": "database",
          "action": "store",
          "language": "javascript",
          "code": "await db.ads.insert({ adId: uuid(), content: input.adContent });",
          "input": "schema.inputs.adContent",
          "output": "schema.outputs.adId",
          "on_error": { "action": "retry", "max_retries": 3 }
        },
        {
          "id": "distributeRevenue",
          "type": "blockchain",
          "action": "executeContract",
          "language": "solidity",
          "tool": "ethers.js",
          "code": "await contract.distributeRevenue(input.revenuePool, input.optInUsers);",
          "input": "schema.inputs.revenuePool",
          "output": "schema.outputs.distribution",
          "on_error": { "action": "retry", "max_retries": 3 }
        }
      ],
      "minItems": 1
    },
    "security": {
      "type": "object",
      "properties": {
        "authentication": { "type": "object", "properties": { "type": { "type": "string", "const": "none" } }, "required": ["type"] },
        "authorization": {
          "type": "object",
          "properties": {
            "type": { "type": "string", "const": "rbac" },
            "roles": { "type": "array", "items": { "type": "string" }, "examples": [["advertiser", "user"]] },
            "permissions": { "type": "array", "items": { "type": "string" }, "examples": [["create_ad", "opt_in_ad"]] }
          },
          "required": ["type", "roles", "permissions"]
        },
        "encryption": {
          "type": "object",
          "properties": { "algorithm": { "type": "string", "const": "AES-256" }, "key_management": { "type": "string", "const": "vault" } },
          "required": ["algorithm"]
        },
        "secrets": {
          "type": "object",
          "properties": { "manager": { "type": "string", "const": "hashicorp-vault" }, "refs": { "type": "array", "items": { "type": "string" }, "examples": [["ad_key"]] } },
          "required": ["manager"]
        }
      },
      "required": ["authentication", "authorization", "encryption", "secrets"]
    },
    "blockchain": {
      "type": "object",
      "properties": {
        "chain": { "type": "string", "enum": ["ethereum", "polkadot", "cosmos"] },
        "network": {
          "type": "object",
          "properties": { "rpc_url": { "type": "string", "format": "uri" }, "chain_id": { "type": "integer", "minimum": 1 } },
          "required": ["rpc_url", "chain_id"]
        }
      },
      "required": ["chain", "network"]
    },
    "orchestration": {
      "type": "object",
      "properties": {
        "type": { "type": "string", "const": "sequential" },
        "runtime": { "type": "string", "const": "nodejs" },
        "scaling": { "type": "object", "properties": { "min_instances": { "type": "integer", "const": 1 }, "max_instances": { "type": "integer", "const": 5 } } }
      },
      "required": ["type", "runtime"]
    }
  },
  "additionalProperties": false
}